@using NewLife;
@using NewLife.Web;
@using XCode;
@using XCode.Configuration;
@{
    var fact = ViewBag.Factory as IEntityFactory;
    var page = ViewBag.Page as Pager;
    var fields = ViewBag.Fields as FieldCollection;
    var ukey = fact.Unique;
    var set = ViewBag.PageSetting as PageSetting ?? PageSetting.Global;
    var nulti_tabs = CubeSetting.Current.Skin == "layui";
}
<table class="table table-bordered table-hover table-striped table-condensed table-data-list">
    <thead>
        <tr>
            @if (set.EnableSelect && ukey != null)
            {
                <th class="text-center" style="width:10px;"><input type="checkbox" id="chkAll" title="全选" /></th>
            }
            @foreach (var item in fields)
            {
                var sortUrl = !item.MapField.IsNullOrEmpty() ? page.GetSortUrl(item.MapField) : page.GetSortUrl(item.Name);
                var df = item as ListField;
                var name = df?.Header ?? item.DisplayName ?? item.Name;
                var title = df?.HeaderTitle ?? item.Description;

                if (item.Type == typeof(DateTime))
                {
                    var width = item.Name.EndsWithIgnoreCase("Date") ? 80 : 134;
                    <th class="text-center" style="min-width:@(width)px;" title="@title"><a href="@Html.Raw(sortUrl)">@name</a></th>
                }
                else if (item.Type == null)
                {
                    <th class="text-center" title="@title">@name</th>
                }
                else
                {
                    <th class="text-center" title="@title"><a href="@Html.Raw(sortUrl)">@name</a></th>
                }
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var entity in Model)
        {
            <tr>
                @if (set.EnableSelect && ukey != null)
                {
                    <td class="text-center"><input type="checkbox" name="keys" value="@entity[ukey.Name]" /></td>
                }
                @foreach (var item in fields)
                {
                    var df = item as ListField;
                    var url = (String)df?.GetUrl(entity);
                    if (df != null && df.DataVisible != null && !df.DataVisible(entity))
                    {
                        <td></td>
                    }
                    else if (df != null && !df.DataAction.IsNullOrEmpty())
                    {
                        var name = df.GetDisplayName(entity);
                        var title = df.GetTitle(entity);
                        <td class="text-center" title="@title"><a href="@Html.Raw(url)" data-action="@df.DataAction">@name</a></td>
                    }
                    else if (df != null && !url.IsNullOrEmpty())
                    {
                        var name = df.GetLinkName(entity);
                        var title = df.GetTitle(entity);
                        if (!String.IsNullOrEmpty(name) && name.StartsWith("<") && name.EndsWith(">"))
                        {
                            <td class="text-center" title="@title"><a href="@Html.Raw(url)" target="@df.Target">@(Html.Raw(name)) data-action=@(nulti_tabs ? "tab" : "")</a></td>
                        }
                        else
                        {
                            <td class="text-center" title="@title"><a href="@Html.Raw(url)" target="@df.Target" data-action=@(nulti_tabs ? "tab" : "")>@name</a></td>
                        }
                    }
                    else
                    {
                        @await Html.PartialAsync("_List_Data_Item", new ValueTuple<IEntity, DataField>(entity, item))
                    }
                }
            </tr>
        }
        @if (page.State is IEntity entity2)
        {
            @await Html.PartialAsync("_List_Data_Stat", entity2)
        }
    </tbody>
</table>